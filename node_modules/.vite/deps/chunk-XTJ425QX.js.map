{
  "version": 3,
  "sources": ["../../@medusajs/dashboard/dist/chunk-Q33G337Z.mjs"],
  "sourcesContent": ["import {\n  useDate\n} from \"./chunk-PFKKVLZX.mjs\";\n\n// src/components/data-table/helpers/general/use-data-table-date-filters.tsx\nimport { createDataTableFilterHelper } from \"@medusajs/ui\";\nimport { subDays, subMonths } from \"date-fns\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nvar filterHelper = createDataTableFilterHelper();\nvar useDateFilterOptions = () => {\n  const { t } = useTranslation();\n  const today = useMemo(() => {\n    const date = /* @__PURE__ */ new Date();\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }, []);\n  return useMemo(() => {\n    return [\n      {\n        label: t(\"filters.date.today\"),\n        value: {\n          $gte: today.toISOString()\n        }\n      },\n      {\n        label: t(\"filters.date.lastSevenDays\"),\n        value: {\n          $gte: subDays(today, 7).toISOString()\n          // 7 days ago\n        }\n      },\n      {\n        label: t(\"filters.date.lastThirtyDays\"),\n        value: {\n          $gte: subDays(today, 30).toISOString()\n          // 30 days ago\n        }\n      },\n      {\n        label: t(\"filters.date.lastNinetyDays\"),\n        value: {\n          $gte: subDays(today, 90).toISOString()\n          // 90 days ago\n        }\n      },\n      {\n        label: t(\"filters.date.lastTwelveMonths\"),\n        value: {\n          $gte: subMonths(today, 12).toISOString()\n          // 12 months ago\n        }\n      }\n    ];\n  }, [today, t]);\n};\nvar useDataTableDateFilters = (disableRangeOption) => {\n  const { t } = useTranslation();\n  const { getFullDate } = useDate();\n  const dateFilterOptions = useDateFilterOptions();\n  const rangeOptions = useMemo(() => {\n    if (disableRangeOption) {\n      return {\n        disableRangeOption: true\n      };\n    }\n    return {\n      rangeOptionStartLabel: t(\"filters.date.starting\"),\n      rangeOptionEndLabel: t(\"filters.date.ending\"),\n      rangeOptionLabel: t(\"filters.date.custom\"),\n      options: dateFilterOptions\n    };\n  }, [disableRangeOption, t, dateFilterOptions]);\n  return useMemo(() => {\n    return [\n      filterHelper.accessor(\"created_at\", {\n        type: \"date\",\n        label: t(\"fields.createdAt\"),\n        format: \"date\",\n        formatDateValue: (date) => getFullDate({ date }),\n        options: dateFilterOptions,\n        ...rangeOptions\n      }),\n      filterHelper.accessor(\"updated_at\", {\n        type: \"date\",\n        label: t(\"fields.updatedAt\"),\n        format: \"date\",\n        formatDateValue: (date) => getFullDate({ date }),\n        options: dateFilterOptions,\n        ...rangeOptions\n      })\n    ];\n  }, [t, dateFilterOptions, getFullDate, rangeOptions]);\n};\n\nexport {\n  useDataTableDateFilters\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAOA,mBAAwB;AAExB,IAAI,eAAe,4BAA4B;AAC/C,IAAI,uBAAuB,MAAM;AAC/B,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,YAAQ,sBAAQ,MAAM;AAC1B,UAAM,OAAuB,oBAAI,KAAK;AACtC,SAAK,SAAS,GAAG,GAAG,GAAG,CAAC;AACxB,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACL,aAAO,sBAAQ,MAAM;AACnB,WAAO;AAAA,MACL;AAAA,QACE,OAAO,EAAE,oBAAoB;AAAA,QAC7B,OAAO;AAAA,UACL,MAAM,MAAM,YAAY;AAAA,QAC1B;AAAA,MACF;AAAA,MACA;AAAA,QACE,OAAO,EAAE,4BAA4B;AAAA,QACrC,OAAO;AAAA,UACL,MAAM,QAAQ,OAAO,CAAC,EAAE,YAAY;AAAA;AAAA,QAEtC;AAAA,MACF;AAAA,MACA;AAAA,QACE,OAAO,EAAE,6BAA6B;AAAA,QACtC,OAAO;AAAA,UACL,MAAM,QAAQ,OAAO,EAAE,EAAE,YAAY;AAAA;AAAA,QAEvC;AAAA,MACF;AAAA,MACA;AAAA,QACE,OAAO,EAAE,6BAA6B;AAAA,QACtC,OAAO;AAAA,UACL,MAAM,QAAQ,OAAO,EAAE,EAAE,YAAY;AAAA;AAAA,QAEvC;AAAA,MACF;AAAA,MACA;AAAA,QACE,OAAO,EAAE,+BAA+B;AAAA,QACxC,OAAO;AAAA,UACL,MAAM,UAAU,OAAO,EAAE,EAAE,YAAY;AAAA;AAAA,QAEzC;AAAA,MACF;AAAA,IACF;AAAA,EACF,GAAG,CAAC,OAAO,CAAC,CAAC;AACf;AACA,IAAI,0BAA0B,CAAC,uBAAuB;AACpD,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,EAAE,YAAY,IAAI,QAAQ;AAChC,QAAM,oBAAoB,qBAAqB;AAC/C,QAAM,mBAAe,sBAAQ,MAAM;AACjC,QAAI,oBAAoB;AACtB,aAAO;AAAA,QACL,oBAAoB;AAAA,MACtB;AAAA,IACF;AACA,WAAO;AAAA,MACL,uBAAuB,EAAE,uBAAuB;AAAA,MAChD,qBAAqB,EAAE,qBAAqB;AAAA,MAC5C,kBAAkB,EAAE,qBAAqB;AAAA,MACzC,SAAS;AAAA,IACX;AAAA,EACF,GAAG,CAAC,oBAAoB,GAAG,iBAAiB,CAAC;AAC7C,aAAO,sBAAQ,MAAM;AACnB,WAAO;AAAA,MACL,aAAa,SAAS,cAAc;AAAA,QAClC,MAAM;AAAA,QACN,OAAO,EAAE,kBAAkB;AAAA,QAC3B,QAAQ;AAAA,QACR,iBAAiB,CAAC,SAAS,YAAY,EAAE,KAAK,CAAC;AAAA,QAC/C,SAAS;AAAA,QACT,GAAG;AAAA,MACL,CAAC;AAAA,MACD,aAAa,SAAS,cAAc;AAAA,QAClC,MAAM;AAAA,QACN,OAAO,EAAE,kBAAkB;AAAA,QAC3B,QAAQ;AAAA,QACR,iBAAiB,CAAC,SAAS,YAAY,EAAE,KAAK,CAAC;AAAA,QAC/C,SAAS;AAAA,QACT,GAAG;AAAA,MACL,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,GAAG,mBAAmB,aAAa,YAAY,CAAC;AACtD;",
  "names": []
}
