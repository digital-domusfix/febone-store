{
  "version": 3,
  "sources": ["../../@medusajs/dashboard/dist/chunk-M3VFKDXJ.mjs"],
  "sourcesContent": ["// src/components/table/data-table/hooks.tsx\nimport { useSearchParams } from \"react-router-dom\";\nvar useSelectedParams = ({\n  param,\n  prefix,\n  multiple = false\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const identifier = prefix ? `${prefix}_${param}` : param;\n  const offsetKey = prefix ? `${prefix}_offset` : \"offset\";\n  const add = (value) => {\n    setSearchParams((prev) => {\n      const newValue = new URLSearchParams(prev);\n      const updateMultipleValues = () => {\n        const existingValues = newValue.get(identifier)?.split(\",\") || [];\n        if (!existingValues.includes(value)) {\n          existingValues.push(value);\n          newValue.set(identifier, existingValues.join(\",\"));\n        }\n      };\n      const updateSingleValue = () => {\n        newValue.set(identifier, value);\n      };\n      multiple ? updateMultipleValues() : updateSingleValue();\n      newValue.delete(offsetKey);\n      return newValue;\n    });\n  };\n  const deleteParam = (value) => {\n    const deleteMultipleValues = (prev) => {\n      const existingValues = prev.get(identifier)?.split(\",\") || [];\n      const index = existingValues.indexOf(value || \"\");\n      if (index > -1) {\n        existingValues.splice(index, 1);\n        prev.set(identifier, existingValues.join(\",\"));\n      }\n    };\n    const deleteSingleValue = (prev) => {\n      prev.delete(identifier);\n    };\n    setSearchParams((prev) => {\n      if (value) {\n        multiple ? deleteMultipleValues(prev) : deleteSingleValue(prev);\n        if (!prev.get(identifier)) {\n          prev.delete(identifier);\n        }\n      } else {\n        prev.delete(identifier);\n      }\n      prev.delete(offsetKey);\n      return prev;\n    });\n  };\n  const get = () => {\n    return searchParams.get(identifier)?.split(\",\").filter(Boolean) || [];\n  };\n  return { add, delete: deleteParam, get };\n};\n\nexport {\n  useSelectedParams\n};\n"],
  "mappings": ";;;;;AAEA,IAAI,oBAAoB,CAAC;AAAA,EACvB;AAAA,EACA;AAAA,EACA,WAAW;AACb,MAAM;AACJ,QAAM,CAAC,cAAc,eAAe,IAAI,gBAAgB;AACxD,QAAM,aAAa,SAAS,GAAG,MAAM,IAAI,KAAK,KAAK;AACnD,QAAM,YAAY,SAAS,GAAG,MAAM,YAAY;AAChD,QAAM,MAAM,CAAC,UAAU;AACrB,oBAAgB,CAAC,SAAS;AACxB,YAAM,WAAW,IAAI,gBAAgB,IAAI;AACzC,YAAM,uBAAuB,MAAM;AAbzC;AAcQ,cAAM,mBAAiB,cAAS,IAAI,UAAU,MAAvB,mBAA0B,MAAM,SAAQ,CAAC;AAChE,YAAI,CAAC,eAAe,SAAS,KAAK,GAAG;AACnC,yBAAe,KAAK,KAAK;AACzB,mBAAS,IAAI,YAAY,eAAe,KAAK,GAAG,CAAC;AAAA,QACnD;AAAA,MACF;AACA,YAAM,oBAAoB,MAAM;AAC9B,iBAAS,IAAI,YAAY,KAAK;AAAA,MAChC;AACA,iBAAW,qBAAqB,IAAI,kBAAkB;AACtD,eAAS,OAAO,SAAS;AACzB,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AACA,QAAM,cAAc,CAAC,UAAU;AAC7B,UAAM,uBAAuB,CAAC,SAAS;AA7B3C;AA8BM,YAAM,mBAAiB,UAAK,IAAI,UAAU,MAAnB,mBAAsB,MAAM,SAAQ,CAAC;AAC5D,YAAM,QAAQ,eAAe,QAAQ,SAAS,EAAE;AAChD,UAAI,QAAQ,IAAI;AACd,uBAAe,OAAO,OAAO,CAAC;AAC9B,aAAK,IAAI,YAAY,eAAe,KAAK,GAAG,CAAC;AAAA,MAC/C;AAAA,IACF;AACA,UAAM,oBAAoB,CAAC,SAAS;AAClC,WAAK,OAAO,UAAU;AAAA,IACxB;AACA,oBAAgB,CAAC,SAAS;AACxB,UAAI,OAAO;AACT,mBAAW,qBAAqB,IAAI,IAAI,kBAAkB,IAAI;AAC9D,YAAI,CAAC,KAAK,IAAI,UAAU,GAAG;AACzB,eAAK,OAAO,UAAU;AAAA,QACxB;AAAA,MACF,OAAO;AACL,aAAK,OAAO,UAAU;AAAA,MACxB;AACA,WAAK,OAAO,SAAS;AACrB,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AACA,QAAM,MAAM,MAAM;AArDpB;AAsDI,aAAO,kBAAa,IAAI,UAAU,MAA3B,mBAA8B,MAAM,KAAK,OAAO,aAAY,CAAC;AAAA,EACtE;AACA,SAAO,EAAE,KAAK,QAAQ,aAAa,IAAI;AACzC;",
  "names": []
}
