import {
  sdk
} from "./chunk-IZVJKWIN.js";
import {
  useQuery
} from "./chunk-R35JBZ3G.js";
import {
  require_jsx_runtime
} from "./chunk-KBTYAULA.js";
import {
  require_react
} from "./chunk-QCHXOAYK.js";
import {
  __toESM
} from "./chunk-WOOG5QLI.js";

// node_modules/@medusajs/dashboard/dist/chunk-RM6NY572.mjs
var import_react = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var useFeatureFlags = () => {
  return useQuery({
    queryKey: ["admin", "feature-flags"],
    queryFn: async () => {
      const response = await sdk.client.fetch("/admin/feature-flags", {
        method: "GET"
      });
      return response.feature_flags;
    },
    staleTime: 5 * 60 * 1e3,
    // Cache for 5 minutes
    cacheTime: 10 * 60 * 1e3
    // Keep in cache for 10 minutes
  });
};
var FeatureFlagContext = (0, import_react.createContext)(null);
var useFeatureFlag = (flag) => {
  const context = (0, import_react.useContext)(FeatureFlagContext);
  if (!context) {
    return false;
  }
  return context.isFeatureEnabled(flag);
};
var FeatureFlagProvider = ({ children }) => {
  const { data: flags = {}, isLoading, error } = useFeatureFlags();
  const isFeatureEnabled = (flag) => {
    const enabled = flags[flag] === true;
    return enabled;
  };
  return (0, import_jsx_runtime.jsx)(FeatureFlagContext.Provider, { value: { flags, isLoading, isFeatureEnabled }, children });
};

export {
  useFeatureFlag,
  FeatureFlagProvider
};
//# sourceMappingURL=chunk-T7OF2W4H.js.map
